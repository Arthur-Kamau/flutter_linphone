group 'app.storiez.plugins.flutter_linphone'
version '1.0-SNAPSHOT'

buildscript {
    ext.kotlin_version = '1.3.50'
    repositories {
        google()
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:4.1.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

rootProject.allprojects {
    repositories {
        google()
        jcenter()
    }
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

static def getPackageName() {
    return "org.linphone"
}

task getGitVersion() {
    def gitVersion = "4.4.0"

    try {
        println("Git version: " + gitVersion)
    } catch (Exception e) {
        println("Git not found")
    }
    project.version = gitVersion
}

configurations {
    customImpl.extendsFrom(implementation)
}

task linphoneSdkSource() {
    doLast {
        configurations.customImpl.getIncoming().each {
            it.getResolutionResult().allComponents.each {
                if (it.id.getDisplayName().contains("linphone-sdk-android")) {
                    println 'Linphone SDK used is ' + it.moduleVersion.version + ' from ' + it.properties["repositoryName"]
                }
            }
        }
    }
}

///// Exclude Files /////

def excludeFiles = []

// Remove or comment if you want to use those
excludeFiles.add('**/XmlRpc*')
excludeFiles.add('**/InAppPurchase*')

def excludePackage = []

excludePackage.add('**/gdb.*')
excludePackage.add('**/libopenh264**')
excludePackage.add('**/**tester**')

/////////////////////////

repositories {
//    maven {
//        name "local linphone-sdk maven repository"
//        url file(LinphoneSdkBuildDir + '/maven_repository/')
//        content {
//            includeGroup "org.linphone"
//        }
//    }

    maven {
        name "linphone.org maven repository"
        url "https://linphone.org/maven_repository"
    }
}


project.tasks['preBuild'].dependsOn 'getGitVersion'
project.tasks['preBuild'].dependsOn 'linphoneSdkSource'

android {
    compileSdkVersion 30

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        //added
        main.jni.srcDirs = []
        // Disables the default ndk-build call (with on-the-fly Android.mk files)
        main.jniLibs.srcDir 'src/main/libs'
    }
    defaultConfig {
        minSdkVersion 23
    }
//    applicationVariants.all { variant ->
//        variant.outputs.all {
//            outputFileName = "linphone-android-${variant.buildType.name}-${project.version}.apk"
//        }
//
//        // https://developer.android.com/studio/releases/gradle-plugin#3-6-0-behavior for extractNativeLibs
//        if (variant.buildType.name == "release") {
//            variant.getMergedFlavor().manifestPlaceholders = [linphone_address_mime_type: "vnd.android.cursor.item/vnd." + getPackageName() + ".provider.sip_address",
//                                                              linphone_file_provider    : getPackageName() + ".provider",
//                                                              extractNativeLibs         : "false"]
//        } else {
//            variant.getMergedFlavor().manifestPlaceholders = [linphone_address_mime_type: "vnd.android.cursor.item/vnd." + getPackageName() + ".provider.sip_address",
//                                                              linphone_file_provider    : getPackageName() + ".debug.provider",
//                                                              extractNativeLibs         : "true"]
//        }
//    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.linphone:linphone-sdk-android:4.5+"
}